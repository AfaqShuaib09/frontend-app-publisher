// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateCoursePage renders html correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateCoursePage
    courseEnrollmentTrack=""
    courseInfo={Object {}}
    courseNumber=""
    courseOrg=""
    coursePrice={0}
    courseTitle=""
    createCourse={[Function]}
    fetchOrganizations={[Function]}
    publisherUserInfo={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Create a New Course
          </title>
        </HelmetWrapper>,
        <div
          className="container-fluid"
        >
          <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <h2>
                Create New Course
              </h2>
              <hr />
              <h3>
                Course Information
              </h3>
              <div
                className="col"
              >
                
                <ReduxForm
                  id="create-course-form"
                  initialValues={
                    Object {
                      "courseEnrollmentTrack": "",
                      "courseNumber": "",
                      "courseOrg": "",
                      "coursePrice": 0,
                      "courseTitle": "",
                    }
                  }
                  onSubmit={[Function]}
                  organizations={Array []}
                />
              </div>
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Create a New Course
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Create a New Course",
          },
          "ref": null,
          "rendered": "Create a New Course",
          "type": "title",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <h2>
                Create New Course
              </h2>
              <hr />
              <h3>
                Course Information
              </h3>
              <div
                className="col"
              >
                
                <ReduxForm
                  id="create-course-form"
                  initialValues={
                    Object {
                      "courseEnrollmentTrack": "",
                      "courseNumber": "",
                      "courseOrg": "",
                      "coursePrice": 0,
                      "courseTitle": "",
                    }
                  }
                  onSubmit={[Function]}
                  organizations={Array []}
                />
              </div>
            </div>
          </div>,
          "className": "container-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-6"
            >
              <h2>
                Create New Course
              </h2>
              <hr />
              <h3>
                Course Information
              </h3>
              <div
                className="col"
              >
                
                <ReduxForm
                  id="create-course-form"
                  initialValues={
                    Object {
                      "courseEnrollmentTrack": "",
                      "courseNumber": "",
                      "courseOrg": "",
                      "coursePrice": 0,
                      "courseTitle": "",
                    }
                  }
                  onSubmit={[Function]}
                  organizations={Array []}
                />
              </div>
            </div>,
            "className": "row justify-content-md-center my-3 ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h2>
                  Create New Course
                </h2>,
                <hr />,
                <h3>
                  Course Information
                </h3>,
                <div
                  className="col"
                >
                  
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={Array []}
                  />
                </div>,
              ],
              "className": "col-6",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Create New Course",
                },
                "ref": null,
                "rendered": "Create New Course",
                "type": "h2",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "hr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Course Information",
                },
                "ref": null,
                "rendered": "Course Information",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "",
                    <ReduxForm
                      id="create-course-form"
                      initialValues={
                        Object {
                          "courseEnrollmentTrack": "",
                          "courseNumber": "",
                          "courseOrg": "",
                          "coursePrice": 0,
                          "courseTitle": "",
                        }
                      }
                      onSubmit={[Function]}
                      organizations={Array []}
                    />,
                  ],
                  "className": "col",
                },
                "ref": null,
                "rendered": Array [
                  "",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "id": "create-course-form",
                      "initialValues": Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      },
                      "onSubmit": [Function],
                      "organizations": Array [],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Create a New Course
            </title>
          </HelmetWrapper>,
          <div
            className="container-fluid"
          >
            <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <h2>
                  Create New Course
                </h2>
                <hr />
                <h3>
                  Course Information
                </h3>
                <div
                  className="col"
                >
                  
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={Array []}
                  />
                </div>
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Create a New Course
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Create a New Course",
            },
            "ref": null,
            "rendered": "Create a New Course",
            "type": "title",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <h2>
                  Create New Course
                </h2>
                <hr />
                <h3>
                  Course Information
                </h3>
                <div
                  className="col"
                >
                  
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={Array []}
                  />
                </div>
              </div>
            </div>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-6"
              >
                <h2>
                  Create New Course
                </h2>
                <hr />
                <h3>
                  Course Information
                </h3>
                <div
                  className="col"
                >
                  
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={Array []}
                  />
                </div>
              </div>,
              "className": "row justify-content-md-center my-3 ",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h2>
                    Create New Course
                  </h2>,
                  <hr />,
                  <h3>
                    Course Information
                  </h3>,
                  <div
                    className="col"
                  >
                    
                    <ReduxForm
                      id="create-course-form"
                      initialValues={
                        Object {
                          "courseEnrollmentTrack": "",
                          "courseNumber": "",
                          "courseOrg": "",
                          "coursePrice": 0,
                          "courseTitle": "",
                        }
                      }
                      onSubmit={[Function]}
                      organizations={Array []}
                    />
                  </div>,
                ],
                "className": "col-6",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Create New Course",
                  },
                  "ref": null,
                  "rendered": "Create New Course",
                  "type": "h2",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "hr",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Course Information",
                  },
                  "ref": null,
                  "rendered": "Course Information",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "",
                      <ReduxForm
                        id="create-course-form"
                        initialValues={
                          Object {
                            "courseEnrollmentTrack": "",
                            "courseNumber": "",
                            "courseOrg": "",
                            "coursePrice": 0,
                            "courseTitle": "",
                          }
                        }
                        onSubmit={[Function]}
                        organizations={Array []}
                      />,
                    ],
                    "className": "col",
                  },
                  "ref": null,
                  "rendered": Array [
                    "",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "id": "create-course-form",
                        "initialValues": Object {
                          "courseEnrollmentTrack": "",
                          "courseNumber": "",
                          "courseOrg": "",
                          "coursePrice": 0,
                          "courseTitle": "",
                        },
                        "onSubmit": [Function],
                        "organizations": Array [],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`CreateCoursePage renders page correctly while fetching 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateCoursePage
    courseEnrollmentTrack=""
    courseInfo={
      Object {
        "courseCreated": false,
        "data": Object {},
        "error": null,
      }
    }
    courseNumber=""
    courseOrg=""
    coursePrice={0}
    courseTitle=""
    createCourse={[Function]}
    fetchOrganizations={[Function]}
    publisherUserInfo={
      Object {
        "error": null,
        "isFetching": true,
        "organizations": Array [],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <u
        className={
          Array [
            "fa",
            "fa-circle-o-notch",
            "fa-spin",
            "fa-3x",
            "fa-fw",
          ]
        }
        hidden={true}
        id="spinner"
      />,
      "className": "mx-auto text-center",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "className": Array [
          "fa",
          "fa-circle-o-notch",
          "fa-spin",
          "fa-3x",
          "fa-fw",
        ],
        "hidden": true,
        "id": "spinner",
        "screenReaderText": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <u
          className={
            Array [
              "fa",
              "fa-circle-o-notch",
              "fa-spin",
              "fa-3x",
              "fa-fw",
            ]
          }
          hidden={true}
          id="spinner"
        />,
        "className": "mx-auto text-center",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": Array [
            "fa",
            "fa-circle-o-notch",
            "fa-spin",
            "fa-3x",
            "fa-fw",
          ],
          "hidden": true,
          "id": "spinner",
          "screenReaderText": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`CreateCoursePage renders page correctly with course create error 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateCoursePage
    courseEnrollmentTrack=""
    courseInfo={
      Object {
        "courseCreated": false,
        "data": Object {},
        "error": "Fail",
      }
    }
    courseNumber=""
    courseOrg=""
    coursePrice={0}
    courseTitle=""
    createCourse={[Function]}
    fetchOrganizations={[Function]}
    publisherUserInfo={
      Object {
        "error": null,
        "isFetching": false,
        "organizations": Array [
          Object {
            "key": "edx",
            "name": "edX",
          },
          Object {
            "key": "edx2",
            "name": "edX2",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Create a New Course
          </title>
        </HelmetWrapper>,
        <div
          className="container-fluid"
        >
          <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <h2>
                Create New Course
              </h2>
              <hr />
              <h3>
                Course Information
              </h3>
              <div
                className="col"
              >
                <t
                  alertType="danger"
                  className={
                    Array [
                      "text-center",
                      "mx-auto",
                      "w-50",
                    ]
                  }
                  closeButtonAriaLabel="Close"
                  dialog="Fail"
                  dismissible={false}
                  id="error"
                  open={true}
                />
                <ReduxForm
                  id="create-course-form"
                  initialValues={
                    Object {
                      "courseEnrollmentTrack": "",
                      "courseNumber": "",
                      "courseOrg": "",
                      "coursePrice": 0,
                      "courseTitle": "",
                    }
                  }
                  onSubmit={[Function]}
                  organizations={
                    Array [
                      Object {
                        "key": "edx",
                        "name": "edX",
                      },
                      Object {
                        "key": "edx2",
                        "name": "edX2",
                      },
                    ]
                  }
                />
              </div>
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Create a New Course
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Create a New Course",
          },
          "ref": null,
          "rendered": "Create a New Course",
          "type": "title",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <h2>
                Create New Course
              </h2>
              <hr />
              <h3>
                Course Information
              </h3>
              <div
                className="col"
              >
                <t
                  alertType="danger"
                  className={
                    Array [
                      "text-center",
                      "mx-auto",
                      "w-50",
                    ]
                  }
                  closeButtonAriaLabel="Close"
                  dialog="Fail"
                  dismissible={false}
                  id="error"
                  open={true}
                />
                <ReduxForm
                  id="create-course-form"
                  initialValues={
                    Object {
                      "courseEnrollmentTrack": "",
                      "courseNumber": "",
                      "courseOrg": "",
                      "coursePrice": 0,
                      "courseTitle": "",
                    }
                  }
                  onSubmit={[Function]}
                  organizations={
                    Array [
                      Object {
                        "key": "edx",
                        "name": "edX",
                      },
                      Object {
                        "key": "edx2",
                        "name": "edX2",
                      },
                    ]
                  }
                />
              </div>
            </div>
          </div>,
          "className": "container-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-6"
            >
              <h2>
                Create New Course
              </h2>
              <hr />
              <h3>
                Course Information
              </h3>
              <div
                className="col"
              >
                <t
                  alertType="danger"
                  className={
                    Array [
                      "text-center",
                      "mx-auto",
                      "w-50",
                    ]
                  }
                  closeButtonAriaLabel="Close"
                  dialog="Fail"
                  dismissible={false}
                  id="error"
                  open={true}
                />
                <ReduxForm
                  id="create-course-form"
                  initialValues={
                    Object {
                      "courseEnrollmentTrack": "",
                      "courseNumber": "",
                      "courseOrg": "",
                      "coursePrice": 0,
                      "courseTitle": "",
                    }
                  }
                  onSubmit={[Function]}
                  organizations={
                    Array [
                      Object {
                        "key": "edx",
                        "name": "edX",
                      },
                      Object {
                        "key": "edx2",
                        "name": "edX2",
                      },
                    ]
                  }
                />
              </div>
            </div>,
            "className": "row justify-content-md-center my-3 ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h2>
                  Create New Course
                </h2>,
                <hr />,
                <h3>
                  Course Information
                </h3>,
                <div
                  className="col"
                >
                  <t
                    alertType="danger"
                    className={
                      Array [
                        "text-center",
                        "mx-auto",
                        "w-50",
                      ]
                    }
                    closeButtonAriaLabel="Close"
                    dialog="Fail"
                    dismissible={false}
                    id="error"
                    open={true}
                  />
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>,
              ],
              "className": "col-6",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Create New Course",
                },
                "ref": null,
                "rendered": "Create New Course",
                "type": "h2",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "hr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Course Information",
                },
                "ref": null,
                "rendered": "Course Information",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <t
                      alertType="danger"
                      className={
                        Array [
                          "text-center",
                          "mx-auto",
                          "w-50",
                        ]
                      }
                      closeButtonAriaLabel="Close"
                      dialog="Fail"
                      dismissible={false}
                      id="error"
                      open={true}
                    />,
                    <ReduxForm
                      id="create-course-form"
                      initialValues={
                        Object {
                          "courseEnrollmentTrack": "",
                          "courseNumber": "",
                          "courseOrg": "",
                          "coursePrice": 0,
                          "courseTitle": "",
                        }
                      }
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />,
                  ],
                  "className": "col",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "alertType": "danger",
                      "className": Array [
                        "text-center",
                        "mx-auto",
                        "w-50",
                      ],
                      "closeButtonAriaLabel": "Close",
                      "dialog": "Fail",
                      "dismissible": false,
                      "id": "error",
                      "open": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "id": "create-course-form",
                      "initialValues": Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      },
                      "onSubmit": [Function],
                      "organizations": Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Create a New Course
            </title>
          </HelmetWrapper>,
          <div
            className="container-fluid"
          >
            <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <h2>
                  Create New Course
                </h2>
                <hr />
                <h3>
                  Course Information
                </h3>
                <div
                  className="col"
                >
                  <t
                    alertType="danger"
                    className={
                      Array [
                        "text-center",
                        "mx-auto",
                        "w-50",
                      ]
                    }
                    closeButtonAriaLabel="Close"
                    dialog="Fail"
                    dismissible={false}
                    id="error"
                    open={true}
                  />
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Create a New Course
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Create a New Course",
            },
            "ref": null,
            "rendered": "Create a New Course",
            "type": "title",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <h2>
                  Create New Course
                </h2>
                <hr />
                <h3>
                  Course Information
                </h3>
                <div
                  className="col"
                >
                  <t
                    alertType="danger"
                    className={
                      Array [
                        "text-center",
                        "mx-auto",
                        "w-50",
                      ]
                    }
                    closeButtonAriaLabel="Close"
                    dialog="Fail"
                    dismissible={false}
                    id="error"
                    open={true}
                  />
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>
              </div>
            </div>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-6"
              >
                <h2>
                  Create New Course
                </h2>
                <hr />
                <h3>
                  Course Information
                </h3>
                <div
                  className="col"
                >
                  <t
                    alertType="danger"
                    className={
                      Array [
                        "text-center",
                        "mx-auto",
                        "w-50",
                      ]
                    }
                    closeButtonAriaLabel="Close"
                    dialog="Fail"
                    dismissible={false}
                    id="error"
                    open={true}
                  />
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>
              </div>,
              "className": "row justify-content-md-center my-3 ",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h2>
                    Create New Course
                  </h2>,
                  <hr />,
                  <h3>
                    Course Information
                  </h3>,
                  <div
                    className="col"
                  >
                    <t
                      alertType="danger"
                      className={
                        Array [
                          "text-center",
                          "mx-auto",
                          "w-50",
                        ]
                      }
                      closeButtonAriaLabel="Close"
                      dialog="Fail"
                      dismissible={false}
                      id="error"
                      open={true}
                    />
                    <ReduxForm
                      id="create-course-form"
                      initialValues={
                        Object {
                          "courseEnrollmentTrack": "",
                          "courseNumber": "",
                          "courseOrg": "",
                          "coursePrice": 0,
                          "courseTitle": "",
                        }
                      }
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />
                  </div>,
                ],
                "className": "col-6",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Create New Course",
                  },
                  "ref": null,
                  "rendered": "Create New Course",
                  "type": "h2",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "hr",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Course Information",
                  },
                  "ref": null,
                  "rendered": "Course Information",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <t
                        alertType="danger"
                        className={
                          Array [
                            "text-center",
                            "mx-auto",
                            "w-50",
                          ]
                        }
                        closeButtonAriaLabel="Close"
                        dialog="Fail"
                        dismissible={false}
                        id="error"
                        open={true}
                      />,
                      <ReduxForm
                        id="create-course-form"
                        initialValues={
                          Object {
                            "courseEnrollmentTrack": "",
                            "courseNumber": "",
                            "courseOrg": "",
                            "coursePrice": 0,
                            "courseTitle": "",
                          }
                        }
                        onSubmit={[Function]}
                        organizations={
                          Array [
                            Object {
                              "key": "edx",
                              "name": "edX",
                            },
                            Object {
                              "key": "edx2",
                              "name": "edX2",
                            },
                          ]
                        }
                      />,
                    ],
                    "className": "col",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "alertType": "danger",
                        "className": Array [
                          "text-center",
                          "mx-auto",
                          "w-50",
                        ],
                        "closeButtonAriaLabel": "Close",
                        "dialog": "Fail",
                        "dismissible": false,
                        "id": "error",
                        "open": true,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "id": "create-course-form",
                        "initialValues": Object {
                          "courseEnrollmentTrack": "",
                          "courseNumber": "",
                          "courseOrg": "",
                          "coursePrice": 0,
                          "courseTitle": "",
                        },
                        "onSubmit": [Function],
                        "organizations": Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`CreateCoursePage renders page correctly with course create success 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateCoursePage
    courseEnrollmentTrack=""
    courseInfo={
      Object {
        "courseCreated": true,
        "data": Object {
          "uuid": "11111111-1111-1111-1111-111111111111",
        },
        "error": null,
      }
    }
    courseNumber=""
    courseOrg=""
    coursePrice={0}
    courseTitle=""
    createCourse={[Function]}
    fetchOrganizations={[Function]}
    publisherUserInfo={
      Object {
        "error": null,
        "isFetching": false,
        "organizations": Array [
          Object {
            "key": "edx",
            "name": "edX",
          },
          Object {
            "key": "edx2",
            "name": "edX2",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Create a New Course
          </title>
        </HelmetWrapper>,
        <div
          className="container-fluid"
        >
          <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <h2>
                Create New Course
              </h2>
              <hr />
              <h3>
                Course Information
              </h3>
              <div
                className="col"
              >
                
                <ReduxForm
                  id="create-course-form"
                  initialValues={
                    Object {
                      "courseEnrollmentTrack": "",
                      "courseNumber": "",
                      "courseOrg": "",
                      "coursePrice": 0,
                      "courseTitle": "",
                    }
                  }
                  onSubmit={[Function]}
                  organizations={
                    Array [
                      Object {
                        "key": "edx",
                        "name": "edX",
                      },
                      Object {
                        "key": "edx2",
                        "name": "edX2",
                      },
                    ]
                  }
                />
              </div>
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Create a New Course
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Create a New Course",
          },
          "ref": null,
          "rendered": "Create a New Course",
          "type": "title",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <h2>
                Create New Course
              </h2>
              <hr />
              <h3>
                Course Information
              </h3>
              <div
                className="col"
              >
                
                <ReduxForm
                  id="create-course-form"
                  initialValues={
                    Object {
                      "courseEnrollmentTrack": "",
                      "courseNumber": "",
                      "courseOrg": "",
                      "coursePrice": 0,
                      "courseTitle": "",
                    }
                  }
                  onSubmit={[Function]}
                  organizations={
                    Array [
                      Object {
                        "key": "edx",
                        "name": "edX",
                      },
                      Object {
                        "key": "edx2",
                        "name": "edX2",
                      },
                    ]
                  }
                />
              </div>
            </div>
          </div>,
          "className": "container-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-6"
            >
              <h2>
                Create New Course
              </h2>
              <hr />
              <h3>
                Course Information
              </h3>
              <div
                className="col"
              >
                
                <ReduxForm
                  id="create-course-form"
                  initialValues={
                    Object {
                      "courseEnrollmentTrack": "",
                      "courseNumber": "",
                      "courseOrg": "",
                      "coursePrice": 0,
                      "courseTitle": "",
                    }
                  }
                  onSubmit={[Function]}
                  organizations={
                    Array [
                      Object {
                        "key": "edx",
                        "name": "edX",
                      },
                      Object {
                        "key": "edx2",
                        "name": "edX2",
                      },
                    ]
                  }
                />
              </div>
            </div>,
            "className": "row justify-content-md-center my-3 ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h2>
                  Create New Course
                </h2>,
                <hr />,
                <h3>
                  Course Information
                </h3>,
                <div
                  className="col"
                >
                  
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>,
              ],
              "className": "col-6",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Create New Course",
                },
                "ref": null,
                "rendered": "Create New Course",
                "type": "h2",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "hr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Course Information",
                },
                "ref": null,
                "rendered": "Course Information",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "",
                    <ReduxForm
                      id="create-course-form"
                      initialValues={
                        Object {
                          "courseEnrollmentTrack": "",
                          "courseNumber": "",
                          "courseOrg": "",
                          "coursePrice": 0,
                          "courseTitle": "",
                        }
                      }
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />,
                  ],
                  "className": "col",
                },
                "ref": null,
                "rendered": Array [
                  "",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "id": "create-course-form",
                      "initialValues": Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      },
                      "onSubmit": [Function],
                      "organizations": Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Create a New Course
            </title>
          </HelmetWrapper>,
          <div
            className="container-fluid"
          >
            <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <h2>
                  Create New Course
                </h2>
                <hr />
                <h3>
                  Course Information
                </h3>
                <div
                  className="col"
                >
                  
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Create a New Course
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Create a New Course",
            },
            "ref": null,
            "rendered": "Create a New Course",
            "type": "title",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <h2>
                  Create New Course
                </h2>
                <hr />
                <h3>
                  Course Information
                </h3>
                <div
                  className="col"
                >
                  
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>
              </div>
            </div>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-6"
              >
                <h2>
                  Create New Course
                </h2>
                <hr />
                <h3>
                  Course Information
                </h3>
                <div
                  className="col"
                >
                  
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>
              </div>,
              "className": "row justify-content-md-center my-3 ",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h2>
                    Create New Course
                  </h2>,
                  <hr />,
                  <h3>
                    Course Information
                  </h3>,
                  <div
                    className="col"
                  >
                    
                    <ReduxForm
                      id="create-course-form"
                      initialValues={
                        Object {
                          "courseEnrollmentTrack": "",
                          "courseNumber": "",
                          "courseOrg": "",
                          "coursePrice": 0,
                          "courseTitle": "",
                        }
                      }
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />
                  </div>,
                ],
                "className": "col-6",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Create New Course",
                  },
                  "ref": null,
                  "rendered": "Create New Course",
                  "type": "h2",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "hr",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Course Information",
                  },
                  "ref": null,
                  "rendered": "Course Information",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "",
                      <ReduxForm
                        id="create-course-form"
                        initialValues={
                          Object {
                            "courseEnrollmentTrack": "",
                            "courseNumber": "",
                            "courseOrg": "",
                            "coursePrice": 0,
                            "courseTitle": "",
                          }
                        }
                        onSubmit={[Function]}
                        organizations={
                          Array [
                            Object {
                              "key": "edx",
                              "name": "edX",
                            },
                            Object {
                              "key": "edx2",
                              "name": "edX2",
                            },
                          ]
                        }
                      />,
                    ],
                    "className": "col",
                  },
                  "ref": null,
                  "rendered": Array [
                    "",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "id": "create-course-form",
                        "initialValues": Object {
                          "courseEnrollmentTrack": "",
                          "courseNumber": "",
                          "courseOrg": "",
                          "coursePrice": 0,
                          "courseTitle": "",
                        },
                        "onSubmit": [Function],
                        "organizations": Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`CreateCoursePage renders page correctly with no publisherUserInfo 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateCoursePage
    courseEnrollmentTrack=""
    courseInfo={
      Object {
        "courseCreated": false,
        "data": Object {},
        "error": null,
      }
    }
    courseNumber=""
    courseOrg=""
    coursePrice={0}
    courseTitle=""
    createCourse={[Function]}
    fetchOrganizations={[Function]}
    publisherUserInfo={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Create a New Course
          </title>
        </HelmetWrapper>,
        <div
          className="container-fluid"
        >
          <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <h2>
                Create New Course
              </h2>
              <hr />
              <h3>
                Course Information
              </h3>
              <div
                className="col"
              >
                
                <ReduxForm
                  id="create-course-form"
                  initialValues={
                    Object {
                      "courseEnrollmentTrack": "",
                      "courseNumber": "",
                      "courseOrg": "",
                      "coursePrice": 0,
                      "courseTitle": "",
                    }
                  }
                  onSubmit={[Function]}
                  organizations={Array []}
                />
              </div>
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Create a New Course
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Create a New Course",
          },
          "ref": null,
          "rendered": "Create a New Course",
          "type": "title",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <h2>
                Create New Course
              </h2>
              <hr />
              <h3>
                Course Information
              </h3>
              <div
                className="col"
              >
                
                <ReduxForm
                  id="create-course-form"
                  initialValues={
                    Object {
                      "courseEnrollmentTrack": "",
                      "courseNumber": "",
                      "courseOrg": "",
                      "coursePrice": 0,
                      "courseTitle": "",
                    }
                  }
                  onSubmit={[Function]}
                  organizations={Array []}
                />
              </div>
            </div>
          </div>,
          "className": "container-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-6"
            >
              <h2>
                Create New Course
              </h2>
              <hr />
              <h3>
                Course Information
              </h3>
              <div
                className="col"
              >
                
                <ReduxForm
                  id="create-course-form"
                  initialValues={
                    Object {
                      "courseEnrollmentTrack": "",
                      "courseNumber": "",
                      "courseOrg": "",
                      "coursePrice": 0,
                      "courseTitle": "",
                    }
                  }
                  onSubmit={[Function]}
                  organizations={Array []}
                />
              </div>
            </div>,
            "className": "row justify-content-md-center my-3 ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h2>
                  Create New Course
                </h2>,
                <hr />,
                <h3>
                  Course Information
                </h3>,
                <div
                  className="col"
                >
                  
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={Array []}
                  />
                </div>,
              ],
              "className": "col-6",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Create New Course",
                },
                "ref": null,
                "rendered": "Create New Course",
                "type": "h2",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "hr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Course Information",
                },
                "ref": null,
                "rendered": "Course Information",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "",
                    <ReduxForm
                      id="create-course-form"
                      initialValues={
                        Object {
                          "courseEnrollmentTrack": "",
                          "courseNumber": "",
                          "courseOrg": "",
                          "coursePrice": 0,
                          "courseTitle": "",
                        }
                      }
                      onSubmit={[Function]}
                      organizations={Array []}
                    />,
                  ],
                  "className": "col",
                },
                "ref": null,
                "rendered": Array [
                  "",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "id": "create-course-form",
                      "initialValues": Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      },
                      "onSubmit": [Function],
                      "organizations": Array [],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Create a New Course
            </title>
          </HelmetWrapper>,
          <div
            className="container-fluid"
          >
            <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <h2>
                  Create New Course
                </h2>
                <hr />
                <h3>
                  Course Information
                </h3>
                <div
                  className="col"
                >
                  
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={Array []}
                  />
                </div>
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Create a New Course
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Create a New Course",
            },
            "ref": null,
            "rendered": "Create a New Course",
            "type": "title",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <h2>
                  Create New Course
                </h2>
                <hr />
                <h3>
                  Course Information
                </h3>
                <div
                  className="col"
                >
                  
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={Array []}
                  />
                </div>
              </div>
            </div>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-6"
              >
                <h2>
                  Create New Course
                </h2>
                <hr />
                <h3>
                  Course Information
                </h3>
                <div
                  className="col"
                >
                  
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={Array []}
                  />
                </div>
              </div>,
              "className": "row justify-content-md-center my-3 ",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h2>
                    Create New Course
                  </h2>,
                  <hr />,
                  <h3>
                    Course Information
                  </h3>,
                  <div
                    className="col"
                  >
                    
                    <ReduxForm
                      id="create-course-form"
                      initialValues={
                        Object {
                          "courseEnrollmentTrack": "",
                          "courseNumber": "",
                          "courseOrg": "",
                          "coursePrice": 0,
                          "courseTitle": "",
                        }
                      }
                      onSubmit={[Function]}
                      organizations={Array []}
                    />
                  </div>,
                ],
                "className": "col-6",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Create New Course",
                  },
                  "ref": null,
                  "rendered": "Create New Course",
                  "type": "h2",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "hr",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Course Information",
                  },
                  "ref": null,
                  "rendered": "Course Information",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "",
                      <ReduxForm
                        id="create-course-form"
                        initialValues={
                          Object {
                            "courseEnrollmentTrack": "",
                            "courseNumber": "",
                            "courseOrg": "",
                            "coursePrice": 0,
                            "courseTitle": "",
                          }
                        }
                        onSubmit={[Function]}
                        organizations={Array []}
                      />,
                    ],
                    "className": "col",
                  },
                  "ref": null,
                  "rendered": Array [
                    "",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "id": "create-course-form",
                        "initialValues": Object {
                          "courseEnrollmentTrack": "",
                          "courseNumber": "",
                          "courseOrg": "",
                          "coursePrice": 0,
                          "courseTitle": "",
                        },
                        "onSubmit": [Function],
                        "organizations": Array [],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`CreateCoursePage renders page correctly with org error 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateCoursePage
    courseEnrollmentTrack=""
    courseInfo={
      Object {
        "courseCreated": false,
        "data": Object {},
        "error": null,
      }
    }
    courseNumber=""
    courseOrg=""
    coursePrice={0}
    courseTitle=""
    createCourse={[Function]}
    fetchOrganizations={[Function]}
    publisherUserInfo={
      Object {
        "error": "Fail",
        "isFetching": false,
        "organizations": Array [
          Object {
            "key": "edx",
            "name": "edX",
          },
          Object {
            "key": "edx2",
            "name": "edX2",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "alertType": "danger",
      "className": Array [
        "text-center",
        "mx-auto",
        "w-50",
      ],
      "closeButtonAriaLabel": "Close",
      "dialog": "Fail",
      "dismissible": false,
      "id": "error",
      "open": true,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "alertType": "danger",
        "className": Array [
          "text-center",
          "mx-auto",
          "w-50",
        ],
        "closeButtonAriaLabel": "Close",
        "dialog": "Fail",
        "dismissible": false,
        "id": "error",
        "open": true,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`CreateCoursePage renders page correctly with organizations 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateCoursePage
    courseEnrollmentTrack=""
    courseInfo={
      Object {
        "courseCreated": false,
        "data": Object {},
        "error": null,
      }
    }
    courseNumber=""
    courseOrg=""
    coursePrice={0}
    courseTitle=""
    createCourse={[Function]}
    fetchOrganizations={[Function]}
    publisherUserInfo={
      Object {
        "error": null,
        "isFetching": false,
        "organizations": Array [
          Object {
            "key": "edx",
            "name": "edX",
          },
          Object {
            "key": "edx2",
            "name": "edX2",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Create a New Course
          </title>
        </HelmetWrapper>,
        <div
          className="container-fluid"
        >
          <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <h2>
                Create New Course
              </h2>
              <hr />
              <h3>
                Course Information
              </h3>
              <div
                className="col"
              >
                
                <ReduxForm
                  id="create-course-form"
                  initialValues={
                    Object {
                      "courseEnrollmentTrack": "",
                      "courseNumber": "",
                      "courseOrg": "",
                      "coursePrice": 0,
                      "courseTitle": "",
                    }
                  }
                  onSubmit={[Function]}
                  organizations={
                    Array [
                      Object {
                        "key": "edx",
                        "name": "edX",
                      },
                      Object {
                        "key": "edx2",
                        "name": "edX2",
                      },
                    ]
                  }
                />
              </div>
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Create a New Course
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Create a New Course",
          },
          "ref": null,
          "rendered": "Create a New Course",
          "type": "title",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <h2>
                Create New Course
              </h2>
              <hr />
              <h3>
                Course Information
              </h3>
              <div
                className="col"
              >
                
                <ReduxForm
                  id="create-course-form"
                  initialValues={
                    Object {
                      "courseEnrollmentTrack": "",
                      "courseNumber": "",
                      "courseOrg": "",
                      "coursePrice": 0,
                      "courseTitle": "",
                    }
                  }
                  onSubmit={[Function]}
                  organizations={
                    Array [
                      Object {
                        "key": "edx",
                        "name": "edX",
                      },
                      Object {
                        "key": "edx2",
                        "name": "edX2",
                      },
                    ]
                  }
                />
              </div>
            </div>
          </div>,
          "className": "container-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-6"
            >
              <h2>
                Create New Course
              </h2>
              <hr />
              <h3>
                Course Information
              </h3>
              <div
                className="col"
              >
                
                <ReduxForm
                  id="create-course-form"
                  initialValues={
                    Object {
                      "courseEnrollmentTrack": "",
                      "courseNumber": "",
                      "courseOrg": "",
                      "coursePrice": 0,
                      "courseTitle": "",
                    }
                  }
                  onSubmit={[Function]}
                  organizations={
                    Array [
                      Object {
                        "key": "edx",
                        "name": "edX",
                      },
                      Object {
                        "key": "edx2",
                        "name": "edX2",
                      },
                    ]
                  }
                />
              </div>
            </div>,
            "className": "row justify-content-md-center my-3 ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h2>
                  Create New Course
                </h2>,
                <hr />,
                <h3>
                  Course Information
                </h3>,
                <div
                  className="col"
                >
                  
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>,
              ],
              "className": "col-6",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Create New Course",
                },
                "ref": null,
                "rendered": "Create New Course",
                "type": "h2",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "hr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Course Information",
                },
                "ref": null,
                "rendered": "Course Information",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "",
                    <ReduxForm
                      id="create-course-form"
                      initialValues={
                        Object {
                          "courseEnrollmentTrack": "",
                          "courseNumber": "",
                          "courseOrg": "",
                          "coursePrice": 0,
                          "courseTitle": "",
                        }
                      }
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />,
                  ],
                  "className": "col",
                },
                "ref": null,
                "rendered": Array [
                  "",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "id": "create-course-form",
                      "initialValues": Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      },
                      "onSubmit": [Function],
                      "organizations": Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Create a New Course
            </title>
          </HelmetWrapper>,
          <div
            className="container-fluid"
          >
            <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <h2>
                  Create New Course
                </h2>
                <hr />
                <h3>
                  Course Information
                </h3>
                <div
                  className="col"
                >
                  
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Create a New Course
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Create a New Course",
            },
            "ref": null,
            "rendered": "Create a New Course",
            "type": "title",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <h2>
                  Create New Course
                </h2>
                <hr />
                <h3>
                  Course Information
                </h3>
                <div
                  className="col"
                >
                  
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>
              </div>
            </div>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-6"
              >
                <h2>
                  Create New Course
                </h2>
                <hr />
                <h3>
                  Course Information
                </h3>
                <div
                  className="col"
                >
                  
                  <ReduxForm
                    id="create-course-form"
                    initialValues={
                      Object {
                        "courseEnrollmentTrack": "",
                        "courseNumber": "",
                        "courseOrg": "",
                        "coursePrice": 0,
                        "courseTitle": "",
                      }
                    }
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>
              </div>,
              "className": "row justify-content-md-center my-3 ",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h2>
                    Create New Course
                  </h2>,
                  <hr />,
                  <h3>
                    Course Information
                  </h3>,
                  <div
                    className="col"
                  >
                    
                    <ReduxForm
                      id="create-course-form"
                      initialValues={
                        Object {
                          "courseEnrollmentTrack": "",
                          "courseNumber": "",
                          "courseOrg": "",
                          "coursePrice": 0,
                          "courseTitle": "",
                        }
                      }
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />
                  </div>,
                ],
                "className": "col-6",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Create New Course",
                  },
                  "ref": null,
                  "rendered": "Create New Course",
                  "type": "h2",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "hr",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Course Information",
                  },
                  "ref": null,
                  "rendered": "Course Information",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "",
                      <ReduxForm
                        id="create-course-form"
                        initialValues={
                          Object {
                            "courseEnrollmentTrack": "",
                            "courseNumber": "",
                            "courseOrg": "",
                            "coursePrice": 0,
                            "courseTitle": "",
                          }
                        }
                        onSubmit={[Function]}
                        organizations={
                          Array [
                            Object {
                              "key": "edx",
                              "name": "edX",
                            },
                            Object {
                              "key": "edx2",
                              "name": "edX2",
                            },
                          ]
                        }
                      />,
                    ],
                    "className": "col",
                  },
                  "ref": null,
                  "rendered": Array [
                    "",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "id": "create-course-form",
                        "initialValues": Object {
                          "courseEnrollmentTrack": "",
                          "courseNumber": "",
                          "courseOrg": "",
                          "coursePrice": 0,
                          "courseTitle": "",
                        },
                        "onSubmit": [Function],
                        "organizations": Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
